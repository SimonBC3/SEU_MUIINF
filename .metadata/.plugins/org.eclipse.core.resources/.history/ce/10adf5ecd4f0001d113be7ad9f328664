
#include "FreeRTOS.h"

#define HIGH_PRIORITY (( configMAX_PRIORITIES - 1 )>>1)+1
#define NORMAL_PRIORITY (( configMAX_PRIORITIES - 1 )>>1)
#define LOW_PRIORITY (( configMAX_PRIORITIES - 1 )>>1)-1

void Task_HW( void *pvParameters );
void Task_WIFI( void *pvParameters );
void Task_Send( void *pvParameters );
void Task_Receive( void *pvParameters );
unsigned portBASE_TYPE makeFreeRtosPriority (osPriority priority);

Fichero tareas.c

#include "FreeRTOS.h"

unsigned portBASE_TYPE makeFreeRtosPriority (osPriority priority)
{
unsigned portBASE_TYPE fpriority = tskIDLE_PRIORITY;

if (priority != osPriorityError) {
fpriority += (priority - osPriorityIdle);
}

return fpriority;
}

void CONFIGURACION_INICIAL(void){

 res_task=xTaskCreate(Task_HW,"HW",1024,NULL,	32,NULL);
 		if( res_task != pdPASS ){
 				printf("PANIC: Error al crear Tarea Visualizador\r\n");
 				fflush(NULL);
 				while(1);
 		}

 res_task=xTaskCreate(Task_WIFI,"WIFI",1024,NULL,	32 ,NULL);
 			if( res_task != pdPASS ){
 					printf("PANIC: Error al crear Tarea Visualizador\r\n");
 					fflush(NULL);
 					while(1);
 			}

}
